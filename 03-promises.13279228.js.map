{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAyBtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAER,SAAAA,EAAUC,MAAAA,GAC3BQ,aAAY,WACNJ,EACFF,EAAQK,GAERJ,EAAOI,KAERP,MAhCPT,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaC,SAAStB,EAAKI,WAAWmB,OACpCC,EAAYF,SAAStB,EAAKK,UAAUkB,OACpCE,EAASH,SAAStB,EAAKM,YAAYiB,OAEhCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAcmB,EAAGL,GACdM,MAAK,SAAAC,OAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBX,EAAA+B,OAAOC,QAAS,uBAAuCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAE9DuB,OAAM,SAAAJ,OAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBX,EAAA+B,OAAOI,QAAS,sBAAsCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGhEY,GAAcG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = parseInt(refs.inputDelay.value);\n  const delayStep = parseInt(refs.inputStep.value);\n  const amount = parseInt(refs.inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    firstDelay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const object = { position, delay };\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(object);\n      } else {\n        reject(object);\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","object","setInterval","addEventListener","event","preventDefault","firstDelay","parseInt","value","delayStep","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.13279228.js.map"}